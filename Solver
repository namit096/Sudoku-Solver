#include <bits/stdc++.h>

using namespace std;

 bool possible(char c , int i , int j ,int board[9][9]){
        for(int row=0;row<9;row++){
            if(board[row][j]==c) return false;
            if(board[i][row]==c) return false;
            
            if(board[3*(i/3)+row/3][3*(j/3)+row%3]==c) return false;
        }
        return true;
    }
   
bool solve(int board[9][9]){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]==0){
                    for(int c=1;c<=9;c++){
                        if(possible(c,i,j,board)){
                            board[i][j]=c;
                            
                            if(solve(board)==true) return true;
                            else board[i][j]=0;//backtrack
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    
   

    void printSudoku9x9(int arr[9][9]) {
	cout << "-------------------------" << endl;
	for (int y = 0; y < 9; y++) {
		for (int x = 0; x < 9; x++)
			cout << arr[y][x] << " ";
		cout << endl;
	}
	cout << "-------------------------" << endl;
    }

int main(){
   int board[9][9] = {
		{0,0,0,9,0,0,0,8,7},
		{0,6,0,0,0,0,2,0,9},
		{7,5,0,0,0,0,3,0,0},
		{0,3,0,0,9,4,0,0,8},
		{0,0,0,8,0,5,0,0,0},
		{8,0,0,2,7,0,0,5,0},
		{0,0,3,0,0,0,0,2,5},
		{9,0,7,0,0,0,0,6,0},
		{2,8,0,0,0,7,0,0,0}
	};
	int board2[9][9] = {
		{8,0,0,0,0,0,0,0,0},
		{0,0,3,6,0,0,0,0,0},
		{0,7,0,0,9,0,2,0,0},
		{0,5,0,0,0,7,0,0,0},
		{0,0,0,0,4,5,7,0,0},
		{0,0,0,1,0,0,0,3,0},
		{0,0,1,0,0,0,0,6,8},
		{0,0,8,5,0,0,0,1,0},
		{0,9,0,0,0,0,4,0,0}
	};
	
	if (solve(board)) cout << "successfully solved board!" << endl;
	printSudoku9x9(board);
	if (solve(board2)) cout << "successfully solved board 2!" << endl;
	printSudoku9x9(board2);

	return 0;
}
